host_operations_gaugefield: reduction: get rid of the ifs??
			  : extend: get rid of the ifs??
random.h: change seed for random numbers, perhaps dynamical??
types.h: local_work_size and global_work_size must be optimized for more than 1 dimension, this then also affects the reduction arrays when calculating the gaugeobservables
random.cpp: nr3_init_state( &out[i], nr3_int64(&initializer) ); -> nr3_init_state( &out[i], dummy ); ??
opencl_update_heatbath.cl:   perform update: perhaps one can define another acc-func here and save one copying step in the end??
			: save some operations at the projection??
			: replace operations with shorter ones and delete comments there
			: simplify calc_staple
opencl_gaugeobservables.cl: reduction: how to do "cl_finish"-alike??
			: check polyakov loop again!!
opencl.cpp: for the reduction of gaugeobservables the global_work_size must be known at best at compiletime -> different init of cl_mems (see comments there)
	: change opencl::gaugeobservables accordingly
opencl_solver: work out global spinorfield-thing, this also affects some spinor-functions
take out PI because its already defined in cmath??

