#ifndef _GAUGEFIELDOPSH_
#define _GAUGEFIELDOPSH_

#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>

#include "globaldefs.h"
#include "hmcerrs.h"
#include "types.h"
#include "operations.h"
#include "input.h"
#include "readgauge.h"
#include "random.h"

class gauge_field {
 public:
 gauge_field(inputparameters& parameters_) : parameters(parameters_) {u = (hmc_gaugefield*) malloc(sizeof(hmc_gaugefield));};
  ~gauge_field(){free(u);};
  hmc_gaugefield * u;
  void read_from_source();
  void set_cold();
  void set_hot();
 private:
  inputparameters parameters;
  hmc_error set_gaugefield_source(hmc_gaugefield * gaugefield, hmc_float * gaugefield_tmp, int check);
};

#endif
